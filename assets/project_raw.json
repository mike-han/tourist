[{"name": "bookmark-widget", "data": ["The Bookmark widget stores a collection of spatial bookmarks for a selected map. Specify 2D or 3D geographic locations with different extents, view angles (for 3D), layer visibility, and drawing marks. Each bookmark can display additional information such as a title, image, and description. You can also include the map\u2019s existing bookmarks, when applicable. Optionally, you can allow end users to add bookmarks at runtime so they can return to locations of interest.", "Use this widget to support app design requirements such as the following:", "This widget requires a connection to a Map widget with a configured data source. The Map widget can be in a different page than the bookmark. When you add a Bookmark widget, first choose a template design for the bookmark content, and click Next. Click Add bookmark to open a map view window with the content of the connected Map widget. You can keep the map view open while specifying locations and editing multiple bookmarks.", "The Simple templates have fixed content for quicker configuration. The Advanced templates allow you to customize the bookmark content by changing and adding widgets for a unique design with more detailed information. For advanced templates, you must configure each widget in the bookmark layout to set up bookmark content.", "When you select the advanced templates, you can modify the nested widgets and layout or add more widgets from the Insert panel. The advanced templates support all widgets. Each bookmark can have a different content design. Each added bookmark copies the content layout from the previously added bookmark, but you can modify it.", "Depending on the template you select, you can configure a variety of settings. The following table compares the differences between the available templates, which include Card, List, Gallery, three Slide templates, and two Advanced templates.", "Enable adding bookmark at runtime", "Display bookmarks from the map", "Configure paging style", "Enable automatically navigating to  the map's first bookmark", "Enable auto-play", "Customize content area", "The Bookmark widget includes the following settings:", "\nFeedback on this topic?\n"]}, {"name": "branch-version-management-widget", "data": ["The Branch Version Management widget allows end users to manage the versions of branch versioned datasets. The widget provides the ability to switch versions, view and edit version information, and choose from different management capabilities such as create, assign, and delete versions. Changes made in this widget affect data across your app, so other\r\nwidgets that use\r\n\r\nthe same services display corresponding versions. If the widget is configured to allow creating new versions in a service, the new versions are also evident in the service when accessed in other apps, such as ArcGIS Pro.", "Use this widget to support app design requirements such as the following:", " When you add a Branch Version Management widget, first select an arrangement style for the widget. This widget requires at least one  data source (feature service or map service, registered as versioned). You\r\ncan use this widget on a page with or without a displayed map. Currently, switched versions are only reflected in other widgets that are configured using the same feature service. If other widgets use a map service as the data source, they won't show the switched version.", "If you add more than one Branch Version Management widget to your app, ensure that they don't point to the same service.", " For each data source, you can choose which version to load on start. With the Advanced arrangement style, you can also specify the version information that's available and visible and which version management capabilities to allow in the widget.", "It's recommended that you add this widget to a Widget Controller when using the Advanced arrangement style so users open the widget by clicking a button first.", "The Branch Version Management widget includes the following settings:", "Currently, the widget only supports services\r\nhosted in ArcGIS Enterprise. These branch versioned services can be added as a data source by providing the service REST endpoint (URL) directly in the builder. You can also add an item to your  ArcGIS organization that references the service (via My Content > Add item > From a URL), and use the item from your organization when adding data to your app.", " Version information and version management capability are based on a combination of the active portal user's privileges and the access permission of the version. End users lacking the required privileges will not see all version information or  have access to  version management options.", "\nFeedback on this topic?\n"]}, {"name": "button-widget", "data": ["The Button widget provides links to open pages, windows, and section views in your app, scroll to a particular block or to the top of the page, or go to a web address. You can use a data source to provide dynamic buttons for which the text or link changes based on a feature selection (such as in a map or list). You can choose from different styles, sizes, and colors to design buttons.", "Use this widget to support app design requirements such as the following:", "When you add a Button widget to the page, the Quick style window appears next to the widget where you can select from preset designs that coordinate with your app\u2019s theme. (To access this window again later, click the Quick style button   on the widget\u2019s toolbar.)  You can also configure your own button design by choosing colors and fonts for regular and hover states in the advanced settings.", "If you connect the button to a data source, such as a feature layer, the feature data can be used to populate the button\u2019s text or URL of the link.", " Click the Pin button on the Button widget's toolbar to keep the widget visible on scrolling pages.", "The Button widget includes the following settings:", "You can upload the following image formats: PNG, GIF, JPG, JPEG, and BMP.", "\nFeedback on this topic?\n"]}, {"name": "card-widget", "data": ["The Card widget provides a flexible and extensible content container in which you can display various bits of related information. Its content can comprise different widgets, such as text, images, buttons, and a map. Select from several predefined card templates or choose a blank template to design your own. You can set a link for the card to be clickable and you can configure different styles for its regular and hover states.", "Use this widget to support app design requirements such as the following:", "When you add a Card widget, first choose a template design, and click Start. On the canvas, select the widgets nested in the card to modify its content and layout, or add more by dragging widgets from the Insert panel into the card. All widgets are supported in the Card widget.", " If the nested widgets fill the container, you can open the configuration settings for the Card widget by selecting it in the Outline pane.", "If you configure the card as a link, its appearance can have two states: Regular and Hover. Design the hover style to indicate that the card is clickable or define different content for the hover status that shows users additional information on the same card. When you enable both states for a card, the states buttons appear near the card on the canvas to switch between them for further design. A Linked to button  appears when you select the nested widgets. The button indicates whether the widget\u2019s settings are isolated or synchronized across the states.", "The Card widget includes the following settings:", " To experiment with these options, click Live view on the builder toolbar.", "\nFeedback on this topic?\n"]}, {"name": "chart-widget", "data": [" The Chart widget displays quantitative attributes from a data source as a graphical representation. It allows end users to visualize and observe possible patterns and trends from raw data.", " Currently, you can choose from bar, column, line, pie, and area charts. Depending on the category type that you choose when configuring the widget, the chart can represent the statistic value of fields for aggregated groups or the statistics of all values for specific fields.", "Bar, column, line, and area charts are all series charts, which rely on a series of\r\ndata to render the display. A data series is a set of data that is\r\ndisplayed on a chart. You can think of a series as an array of\r\nvalues based on the attribute. Each instance in the array is a data\r\npoint. When plotted on a chart, each data point has a\r\nshape. One or more series can be displayed at a time\r\nin a series chart. For example, a chart can show the\r\npopulation of different genders in each U.S. state. The\r\nfemale population for each state is a series, and the male\r\npopulation of each state is another series. Each population of a\r\nstate is a data point in that series.", "Pie charts express part-to-whole relationships in data. Each slice represents one component and all slices added together equal the whole. Each slice is a data point that illustrates numerical proportion to the whole.", "Use this widget to support app design requirements such as the following:", " The widget requires a\r\ndata source. You can use the chart widget on a page with\r\nor without a displayed map. After selecting a data source, you\r\nselect a chart template to start with a specific chart\r\ntype.", " The data source for a chart can be one of the\r\nfollowing: Operational layers, including a feature layer or\r\nscene layer in an existing map or added from a service Tables from a map, including a related\r\ntableOutput data source of another widget, such as\r\nquery result of the Query widget", "The Chart widget includes the following settings:", " Generally, there are two options for generating data categories to analyze, calculate, and display data source values in charts: the By group and By field category types.", "The By group category type displays values by category. This chart\r\nrelies on data aggregation to create a category. It groups features\r\nor records into different categories based on the values of a\r\nspecified category field. It depicts statistical values of one or\r\nmultiple fields for each category. Each data point in the series chart or pie chart\r\nrepresents a statistic value (count, sum, average, minimum, or\r\nmaximum) of a field grouped into categories. For example, with student data that includes fields for Name, Class, Gender, Age, Exam1, and Exam2, you can use the Class field to group data into different categories in the chart, such as calculating the mean for the Age field values for each Class category.", " The By field category type displays attribute values as charts, depicting statistical values of all features\r\nor records for a specified field or fields. One or more numeric fields are specified\r\nto represent the categories. For each field or category, a summary\r\nstatistic is calculated to create a data point. Using the same data\r\nas the previous example, you can calculate and plot the average scores of\r\nExam1 and Exam2 for all students.", " Charts present the statistics of the source data. To interact with other widgets with the same source data as the chart, you can add actions in the Action pane. For example, select a chart symbol, such as a bar, and show the corresponding features in a Map widget and List widget. To do so, click Message action and add a trigger for Record Selection Changes. Select Framework, and choose Select Data Records. The trigger data is the chart statistics output, which you can add as the data that the trigger will work on. Configure it with the trigger field from the trigger data, and action field from the action data to connect the trigger and action data. Once connected, any selection from the chart statistics triggers a selection action in the source data. You can also configure Data action in charts to view the statistics in a Table widget.", " The matching field should be identical between the chart output statistics and the source data to build the action connection. Chart statistics data generates a new OBJECTID based on the results, which is not the same unique ID in the source data. For best results, use the category field you used to configure the chart.", " Apart from framework-level selection or filtering actions, which affect any widget using the same data source, currently, the Map widget supports Flash and Filter actions for a Chart widget's message.", "\nFeedback on this topic?\n"]}, {"name": "coordinate-conversion-widget", "data": [" It's common for analysts to work across various systems that use different coordinate systems to pinpoint places on the earth. For example, one system may use decimal degrees (DD) and another system may require the same location to be specified in Military Grid Reference System (MGRS). The Coordinate Conversion widget allows you to input coordinates using one coordinate system and output to different coordinate systems using multiple notation formats. Another capability of this widget is to geocode and reverse geocode a captured point on the map.", "Use this widget to support app design requirements such as the following:", " When you add the Coordinate Conversion widget to a page, you can configure it to reference a map.  Without a map, users can manually enter coordinates in the widget to convert coordinates to the selected output notation.", "When you include this widget in an app, it  provides users with the following tools and options:  Add Point\u2014Click the map to\r\ncapture coordinates on a connected map.  Copy All\u2014Copy all output\r\nnotation to the operating system's clipboard so it can be\r\npasted into an external application like Notepad.  Zoom\u2014Zoom to the coordinates\r\nmanually supplied or captured on the map in the input\r\nlocation.Input Format Settings\u2014Reconfigure the input notation and apply a custom\r\nformat for how capture coordinates will be displayed. DD is the\r\ndefault input notation.Add Conversion\u2014Create a new output notation with a custom format.", " The following functions are available in the\r\noutput notation section:Output Format Settings\u2014Change the title of the output notation and\r\nsupply a custom format for how to display coordinates.  Copy\u2014Copy the\r\ncoordinate to the clipboard. Expand Output\u2014Display coordinates as\r\nindividual parts to allow copying each\r\nseparately (such as just the Latitude coordinate for Lat/Lon).Remove Coordinate\u2014Remove a notation from the list of output\r\nnotations.", "The Coordinate Conversion widget includes the following settings:", "\nFeedback on this topic?\n"]}, {"name": "divider-widget", "data": ["The Divider widget helps you improve page structure by adding a visual line that separates widgets into distinct groups to create a clear hierarchy.", "Use this widget to support app design requirements such as the following:", "When you add a Divider widget to the page, the default style is a thin black line. The Quick style window appears initially so you can select from preset styles. (To access this window again later, click the Quick style button   on the widget\u2019s toolbar.)  You can also configure your own divider style in the widget settings.", "The Divider widget includes the following settings:", "\nFeedback on this topic?\n"]}, {"name": "edit-(beta)-widget", "data": ["You just helped us make this site a little better. We always take feedback seriously. It improves the site for everyone. Thanks again!"]}, {"name": "elevation-profile-widget", "data": [" The Elevation Profile widget generates and displays an elevation profile based on an input path created by drawing or selecting single- or multisegment lines on a web map or scene. The widget can display two elevation profile lines, one for the ground and one for the selected features. Users can choose distance and elevation units and optionally view slope and elevation statistics.", "Use this widget to support app design requirements such as the following:", " This widget requires connecting to a Map widget. To generate an elevation profile for selected line features, the Map widget must be connected to a data source (2D web map or 3D web scene).  Line features from map services are not selectable. The widget uses an elevation layer as a surface that provides base heights for the layers in the map. By default, the widget uses the Esri  Terrain 3D elevation layer for all web maps and for web scenes without a defined ground layer. You can replace the default Terrain 3D elevation layer with a custom  web elevation layer in your map or scene if, for example, you want higher-resolution data for an area of interest. ", "For best results when using web scenes, use the same elevation mode in Scene Viewer for all selectable line layers. If multiple features are selected from different line layers that use different elevation modes, the widget displays the features  using the elevation mode from the first selected feature.", "The Elevation Profile  widget includes the following settings:", "The New Zealand elevation layer is an example of a valid elevation layer\r\nservice:\r\n\r\nhttps://services1.arcgisonline.co.nz/arcgis/rest/services/Elevation/New_Zealand_Elevation/ImageServer", " When the spatial reference is projected using a projection other than Web Mercator and the drawn or selected  path is shorter than the geodesic distance threshold, distances are computed planimetrically (independent of elevation).", " The Select tool available in the Map widget does not work as a selection tool in the Elevation Profile widget. To generate an elevation profile for a line selection, users must use the Elevation Profile widget's selection tool.", "Map Projection\u2014Use the units defined by the projection of\r\nthe web map or web scene. This is the default. For example, the \r\nWGS 1984 Web Mercator (Auxiliary Sphere) (WKID 102100) projection defaults\r\nto esriMeters.", "\nFeedback on this topic?\n"]}, {"name": "embed-widget", "data": ["The Embed widget allows you to embed website content using a URL or code for additional custom functionality.", "Use this widget to support app design requirements such as the following:", "The following is an example of how to use custom code to embed an iframe:", " If you choose to display a PDF directly in the Embed widget, some users may not be able to view it in certain browsers for security reasons.  ", "To create a dynamic URL using URL parameters, save and reload your app with the URL parameter you want to use, so you can select a corresponding key in the URL info window. At runtime, the Embed widget finds and matches the name of the specified URL info with the URL parameters added to the host app's URL and resolves the URL using the corresponding value to display the embedded app.", "The Embed widget includes the following settings:", "Only HTTPS URLs are supported. For security, the embedded app is constrained by the same origin policy. For domains other than  *.arcgis.com and *.esri.com, the sandbox attribute is automatically added.", "For information about URL parameters supported by the embedded app, refer to the respective documentation, such as for ArcGIS Dashboards and ArcGIS Web AppBuilder.", "If you want to embed a complex HTML page that exceeds the 8 KB size limit imposed for performance reasons, deploy it to your own server   and  embed by URL instead.", " When you embed by code, the sandbox attribute is automatically added without the allow-same-origin directive. This allows the embedded content to run JavaScript and read its own cookie or local storage information, but it can't access the Experience Builder app DOM, cookie, local storage, and so on.", "Complete the following steps to obtain URL parameters from your web experience  that you can pass to an embedded app:", "Because the builder already includes the app ID parameter, add the URL parameter using an ampersand (such as &state=) instead of a question mark.", "Once the builder reloads with the URL parameter, the URL info button displays its key to build a dynamic URL.", "The following is an example dynamic URL for an embedded dashboard:https://<your portal url>/apps/opsdashboard/index.html#/<id>?state={appURL.search.state}", "\nFeedback on this topic?\n"]}, {"name": "feature-info-widget", "data": ["The Feature Info widget shows details about data from a feature layer or scene layer. It inherits the pop-up content defined for the associated feature layer (see Pop-ups: the essentials for details). If pop-ups aren\u2019t configured for the feature layer, the widget returns a list of all the attributes from the feature layer instead. For scene layers, pop-up configuration is not supported, so the widget returns a list of all the attributes about the scene data.", "Use this widget to support app design requirements such as the following:", "This widget requires that a data source be set. You can set actions for a Feature Info widget to interact with other widgets, such as zooming to the feature on a map in a Map widget or filtering out the feature on a List widget. You can also use this widget to display feature attributes without including a map in the app.", "The Feature Info widget includes the following settings:", "\nFeedback on this topic?\n"]}, {"name": "filter-widget", "data": ["The Filter widget allows you to limit the visibility of features in one or more layers to only those that meet the expression criteria. Changes made in a Filter widget affect data across your app, so other widgets that use the same layers are filtered accordingly.", "Use this widget to support app design requirements such as the following:", "The Filter widget requires that a data source be set for each filter that you add. You can set actions for a Filter widget to interact with other widgets, such as zooming to the selected feature on a map in a Map widget. Each filter can be turned on or off by end users to control the visibility of features. When you configure multiple filters for this widget, you can specify whether all enabled filters must be true to show the data or if any can be true to show the data.", "The Filter widget includes the following settings:", "You can upload the following image formats: PNG, GIF, JPG, JPEG, and BMP.", " If a filter widget is nested in a Widget Controller, the filter won't be automatically applied to the data until the widget panel is opened (either manually or configured to open in the Widget Controller settings).", " A filter uses logical expressions to find and display features in a layer based on attribute values in its data. Expressions use the general form of <Field name> <operator that specifies a condition> <Value or Field>. For example, Shelter capacity is greater than 200.", "To create expressions in the SQL Expression Builder, click Add clause or Add clause set.", "The expression for each clause includes the following  input boxes:", "If you connect the Filter to an output data source, you can't choose the values for it in the settings (except for coded values). The list of values is dynamically generated at runtime after the output data is created by the source widget. For this reason, Ask for values is checked by default and predefined values can only be typed in.", "For each clause, you can set the following additional options:", " Predefined values allow you to filter based on a value or values that you choose from a static list or type directly. By default, Ask for values is checked and the list is set to show values based on the previous expressions. You can also drag the values to move them and change the order.", "If you add more than one clause or clause set to the filter, click AND to specify that all filter criteria must be true or click OR to specify that any filter criteria can be true. You can also configure this setting for the clauses in a clause set.", "\nFeedback on this topic?\n"]}, {"name": "fly-controller-widget", "data": ["The Fly Controller widget allows you to showcase fly animation by navigating through a path or around a point on a 3D map.", "Use this widget to support app design requirements such as the following:", "This widget requires a connection to a\u00a0Map widget\u00a0with a configured 3D\u00a0data source.", "When you include this widget in an app with a web scene layer, a toolbar provides users with the following tools for the fly animation:", " When flying is paused, the toolbar becomes available for changes that take effect when the Play button is clicked again.", "The Fly Controller widget includes the following settings:", "\nFeedback on this topic?\n"]}, {"name": "image-widget", "data": ["The Image widget allows you to add static and dynamic images to a page.", "Use this widget to support app design requirements such as the following:", "For a static image source, there are no limitations for the size of the images or the number of images you can upload.", "You can upload the following image formats: PNG, GIF, JPG, JPEG, and BMP.", "Only images that have been connected to an element in your app are stored in the web experience ArcGIS item. Images that have been uploaded but not used are cleared when you refresh the browser. It's best to upload images only as you need them. The images you upload are stored during your browser session to avoid adding the same image for different widgets multiple times.", "The Image widget includes the following settings:Connect to data\u2014Optionally, connect the widget to specific data, including a data view. (A data source is not required for an Image widget.)Note:If you connect to a data source, you can still add a static image, but you can also set a dynamic source from the attributes or expressions based on the data source.Image source\u2014Select an image source by either uploading it from local files or providing the URL. If applicable to the selected data, click Dynamic and choose Attachment or Symbol to populate the image widget with feature layer attachments or web map feature symbols.If the selected data view contains multiple features, the image widget only displays the attachments or symbols for the first feature.The Attachment and Symbol source support data view selection, Selected features, or Auto-populated features (with List).Image display quality\u2014For a static local image source (PNG, JPG, and JPEG file formats only),  choose from four levels of image display quality: Low, Medium, High, and Original. Use a lower display quality to optimize image loading performance.Set link\u2014Add a link on the image to go to other content, such as a page, window, web address, block, or a view in a section in your app. You can choose whether the link opens in the same window as the app, the top window, or a new window.Tooltip\u2014Provide hover text to describe the image.Note:For ToolTip and alt text input, if a data source is connected, you can either directly type the content (static) or choose dynamic content using attributes, statistics, or expressions based on the data source.Alt text\u2014Provide the alt text for assistive technology, such as screen readers.PositionFill\u2014Fill the widget area with the image, leaving no blank space, but the image may be cropped.Fit\u2014Fit the entire image within the widget borders.Shape\u2014Change the image shape from rectangular to other options such as circular and hexagonal.", "If you connect to a data source, you can still add a static image, but you can also set a dynamic source from the attributes or expressions based on the data source.", "For ToolTip and alt text input, if a data source is connected, you can either directly type the content (static) or choose dynamic content using attributes, statistics, or expressions based on the data source.", "\nFeedback on this topic?\n"]}, {"name": "legend-widget", "data": ["The Legend widget displays labels and symbols for layers in a map. The legend only displays layers and sublayers that are turned on.", "Use this widget to support app design requirements such as the following:", "This widget requires a connection to a Map widget with a configured data source. The Map widget must be in the same page as the legend.", "Currently, the Legend widget doesn\u2019t support the following layer types: elevation, integrated mesh, OpenStreetMap, vector tile, web tile, graphics, KML, and map notes. Dictionary renderers and 3D symbols with more than one symbol layer are also not supported.", "The Legend widget includes the following settings:", " To experiment with these options, turn on Live view and test vertical and horizontal scrolling and stacked layout.", "\nFeedback on this topic?\n"]}, {"name": "list-widget", "data": ["The List widget displays data records in a custom list view. It uses a card design as a container for a few short descriptions of related information with the option to include a button to view additional details. You can choose from several templates to build the card layout. The templates include image, button, and text widgets. You can also choose a blank template to design your own. The data source for the list is defined by a feature layer. Each item card in the list represents a record and the widgets on a card can be used to display the record\u2019s attributes. To design the list, you can customize the style settings and modify the layout of the first card to update all the cards in the list.", "Use this widget to support app design requirements such as the following:", "When you add a List widget, first choose a template design for the item cards in the list, and click Start. On the canvas, the first item in the List widget is activated and you can modify the layout of the widgets within it or add more by dragging widgets from the Insert panel into the first card. Currently, the List widget only supports Text, Button, and Image widgets.", "The List widget requires a data source. You can use the List widget on a page with or without a displayed map. If you include a Map widget that uses the same layer, clicking a feature in the list, highlights the corresponding feature in the map. When designing the contents of item cards in the list, specify what you want to display by configuring the widgets in the first item, selecting respective dynamic content to populate records from the connected data source. (By default, widgets that you add to the list inherit the list\u2019s data.) You can also set actions for a List widget to interact with other widgets in your app, such as zooming to the selected feature on a map in a Map widget or displaying the selected feature\u2019s attributes in a Feature Info widget.", "If you configure the List widget with multiple states (Regular, Hover, and Selected), a Linked to button  appears when you select the nested widgets for custom layouts. The button indicates whether the widget\u2019s settings are isolated or synchronized across the states.", "The List widget includes the following settings:", " When the list uses a custom layout for medium or\r\nsmall screen devices, you can customize the size of list items. Icons in this setting indicate which screen size (large, medium, and small) the configuration applies to.", "To change the corresponding states for nested widgets, you can isolate the changes so they don't apply to all the states. Select the List widget, and click the button for the state you want to change. For the Layout  setting, select Custom. Click a nested widget, click the Linked to button  that appears, choose Isolate, and then configure\r\nthe nested widget's settings. (If you configure settings first and then click\r\nIsolate, the changes will have already been applied to the other states.)", "Show selection and Clear selection tools only appear when Selected state is enabled.", "\nFeedback on this topic?\n"]}, {"name": "map-widget", "data": ["The Map widget allows you to display 2D and 3D geographic information. You can enable tools in the map, such as Zoom, Locate, Search, and Measure.", "Use this widget to support app design requirements such as the following:", "You can show a single map or include the option to switch between two maps. You can include multiple maps in an app by adding more Map widgets. ", " The Map widget requires a data source, including web maps and web scenes. When you include tools, they are automatically positioned on the map based on the size of the widget in both design mode and the final app.", "The Map widget also supports triggers on the Action tab. For example, with this feature, you can have two Map widgets and synchronize them by adding a trigger based on when the extent changes. You can set triggers and actions to interact with other widgets. For example, you can add an action trigger to return only the features in a List widget that are visible on the map. Triggers and actions are defined and managed on the Action tab. To learn more about the supported features in the Map widget, see Add triggers.", "The Map widget includes the following settings:", "\nFeedback on this topic?\n"]}, {"name": "map-layers-widget", "data": ["The Map Layers widget displays a list of map layers and their symbols.", "Use this widget to support app design requirements such as the following:", "This widget requires a data source to which you can connect directly or through a Map widget in your app. You can use the Map Layers widget on a page with or without a displayed map.", "The Map Layers widget includes the following settings:", "To experiment with these options, click Live view on the builder toolbar.", "The following options are only available when configuring this widget to work with the Map widget:\r\nZoom to\u2014Zoom the corresponding map to the extent of the layer.Adjust layer transparency\u2014Change the transparency, or opacity, of the layer in the corresponding map.Toggle layer visibility\u2014Turn layer visibility on or off in the corresponding map.", "\nFeedback on this topic?\n"]}, {"name": "menu-widget", "data": ["The Menu widget organizes pages and is designed to help users get from one page in your app to another. You can change the direction of the menu, choose a style such as tabs or pills, and select a color for the background and active menu.", "Use this widget to support app design requirements such as the following:", "  Typically, you would  position a menu at the top of a page in the header or body. The Menu widget is automatically populated with the pages, links, and folders as they appear in the Page panel. Names of pages, folders, and links appear in the menu in the order you arrange them unless you click Hide from menu. When you nest pages and links in a page or folder, they appear in the Menu widget as a drop-down menu. A folder provides a drop-down menu that allows the top level to be clicked without changing the page. Users interact with the menu by hovering over or clicking the link, which provides navigation back to the pages in your experience.", "The Menu widget includes the following settings:", " To experiment with these options, click Live view on the builder toolbar.", "\nFeedback on this topic?\n"]}, {"name": "oriented-imagery-widget", "data": [" The Oriented Imagery widget allows end users to\r\ninteract with and visualize imagery that's taken from any\r\nangle\u2014including oblique, bubble, street-side, inspection, and\r\n360-degree images\u2014in a 2D map or 3D scene. \r\nOriented imagery can represent different sources of imagery\r\nfrom different optical cameras, including mobile cameras, drones,\r\nor terrestrial sensors. Viewing these\r\nimages in the context of a map magnifies their informational\r\nvalue.", " With this widget, clicking a\r\nlocation on the map provides tools and an imagery viewer for\r\nexploring available oriented images that depict the area of\r\ninterest. Panning and zooming the image dynamically illustrates the\r\ncamera's field of view on the map.", "The widget supports common imagery\r\nsources, or you can create custom oriented imagery types to support\r\na wide range of cameras. Commercial companies that generate content\r\nat scale and want to create custom or automated publication\r\nworkflows can learn more about the supported database schemas in\r\nthe Oriented\r\nImagery repository on GitHub.", "Use this widget to support app design requirements such as the following:", " This widget requires connecting\r\nto a Map widget (with or without a connected data source) and adding an Oriented Imagery Catalog (OIC) that's published as an item in\r\nan ArcGIS organization. An OIC is a type of data model used to\r\nmanage an imagery collection.", " When you add an Oriented Imagery\r\nwidget, first choose a Map widget where you want the basemap to be\r\nloaded. Follow up by choosing an Oriented Imagery Catalog (OIC) that\r\nyou want to view and explore, either from your own contents or from\r\na shared group.", " When you include this widget in\r\nan app, the imagery viewer window provides users with the following tools\r\nfor navigating and investigating imagery:\r\nSpatial navigation\r\ntools designed to work with oriented imagery\r\nQuerying based on\r\ncurrent view and filters (including time)\r\nImage enhancement\r\noptions\r\nLinear and height\r\nmeasurement tools (when the imagery supports them)\r\nSynchronized display of\r\nview extent\r\nOption to display\r\nextents and images similar to the current selection\r\nOption to overlay\r\ncustom vector layers on oriented imagery and add or edit\r\nfeatures\r\n\nNote:Test the widget using Live view or save and preview your app in another window. Select the widget, and click a location in the corresponding map\r\nthat loads. For more\r\ninformation about how to use this widget and its tools, see the user guide.", "Test the widget using Live view or save and preview your app in another window. Select the widget, and click a location in the corresponding map\r\nthat loads. For more\r\ninformation about how to use this widget and its tools, see the user guide.", "The Oriented Imagery widget includes the following settings:", " The map or scene must contain at least\r\none editable feature layer.", " For example, users can display vector layers on top of the\r\nimage and digitize an object,\r\nsuch as a hydrant, that can be viewed from any angle.", "\nFeedback on this topic?\n"]}, {"name": "query-widget", "data": [" The Query widget allows you to retrieve information from a data\r\nsource by executing an attribute or spatial filter query. The\r\nresults of a query generate an output data source that other\r\nwidgets can use.", "Use this widget to support app design requirements such as the following:", " The Query widget requires that a data source be set for each query that you add. Each query works with a single layer, and you can define multiple attribute and spatial filters. You can also create multiple queries and use layers from several data sources. A query can be configured with or without a map. To display the features returned from a query in a Map widget, you can either set an action to have them automatically show or use a data action that allows the user to click a button. Currently, using a scene layer requires adding a Record selection changes trigger instead, so users can click a query result to highlight it on the map.", "The Query widget includes the following settings:", "You can upload the following image formats: PNG, GIF, JPG, JPEG, and BMP.", " The Query widget generates an output data source\r\nthat can be used in other widgets. The interaction with additional\r\nwidgets using the same output data source is achieved through\r\nadding actions. For example, the map can automatically\r\ndisplay  the query results and zoom to the features. In the Query widget settings, on the Action tab,\r\nadd the Records created trigger, select the target map, and add actions for\r\nShow on map and Zoom to.", " The query results are shown in a list. To\r\nselect the item in the list and select the corresponding feature on the map, add\r\nthe Record selection changes trigger for the Query widget.\r\nSelect the target framework, add the Select data\r\nrecords action, and configure it with the feature layer for the map\r\nand the fields that bind the connection between the trigger and\r\naction data. Additionally, you can add the Zoom to action to\r\nzoom the map to the selected feature.", "\nFeedback on this topic?\n"]}, {"name": "search-widget", "data": ["The Search widget allows you to configure a search tool to find features, records, or locations based on specific layers and locators, and define how to display search results. If you add multiple search sources to the widget, users can choose which ones to search. Performing the search using a layer source affects data across your app, so other widgets that use the same layer are filtered to show the corresponding search result. If you want search results to be selected, you can set an action. To have the widget select  features  without filtering the data, create a data view for the data source that you can use as the layer source.  Performing a search using a locator source generates an output data source that other widgets can use.", "To search, users type a word or phrase in the search box and press Enter, click the search button, or choose from a list of suggestions that appear based on matching records. (The suggestions list displays each matching value as an item, so if a record has two fields that match the search phrase, that record appears as two suggestions.) Users can use the up and down arrow keys to browse through the suggestions list. Clicking a suggestion replaces the search phrase with the content from the suggested item to apply the search using the new value, which returns corresponding data in a result panel. To streamline this, there is a setting you can turn on to automatically select the first search result. You can also configure the widget to open another page in your app to show the result in another widget.", "Use this widget to support app design requirements such as the following:", "The Search widget supports two types of search sources\u2014layers and locators. When you add a Search widget, the locators specified in your organization settings are added as  locator sources by default. (If you don't see the default ArcGIS World Geocoding Service, your administrator may have removed it from the organization settings.) To use another locator source, add a URL for the locator service. To search layers, select from feature layers and scene layers that are added as data to your app.", "You can set actions for a Search widget to interact with other widgets in your app, such as zooming a map to the selected result or showing search results (from a locator source) in a map.", "The Search  widget includes the following settings:", "You can upload the following image formats: PNG, GIF, JPG, JPEG, and BMP.", "When you configure message actions for the Search widget, you can choose from the following triggers depending on the search source.", "Record selection changes", "Records created", "Data filtering changes", " When configured with a locator source, the Search widget generates an output data source\r\nthat can be used in other widgets. The interaction with additional\r\nwidgets using the same output data source is achieved through\r\nadding actions. For example, the map can automatically\r\ndisplay  the search results and zoom to the features. In the Search widget settings, on the Action tab,\r\nadd the Records created trigger, select the target map, and add actions for\r\nShow on map and Zoom to.", " To\r\nselect a feature on a map that corresponds with a selected search result, add\r\nthe Record selection changes trigger for the Search widget (when configured to use the results panel).\r\nSelect the target framework, add the Select data\r\nrecords action, and configure it with the feature layer for the map\r\nand the fields that bind the connection between the trigger and\r\naction data. Additionally, you can add the Zoom to action to\r\nzoom the map to the feature.", "When configured with a layer source, if you want the map to zoom or pan to the selected search result, add the Data filtering changes trigger, select the target map, and add the\r\nPan to and Zoom to actions.", "For the Search widget to select the feature on a map without filtering the data, create a data view for the data source that you can use as the layer source.", "\nFeedback on this topic?\n"]}, {"name": "share-widget", "data": ["The Share widget allows end users to share the app by posting it to a social media account, sending an email with a link, or embedding it in a website or blog. It also provides a URL and QR code of the app. It shares the entire app. It doesn't support sharing specific content in the app. To add a Share widget, drag it anywhere on a page and use either pop-up or inline style to fit your app design.", "Use this widget to support app design requirements such as the following:", "It's recommended that you not add a Share widget to a Widget Controller because the Share widget is already a wrapped widget that can perform  options in a pop-up.", " Click the Pin button on the Share widget's toolbar to keep the widget visible on scrolling pages.", "The Share widget includes settings for two sharing styles: pop-up and inline.", "Pop-up\u2014Display  the sharing URL and other sharing options in a pop-up.Icon\u2014Customize the share icon by changing the icon symbol, color, and size.Share options\u2014Turn on the share options to include in the widget, such as embed or email.Tooltip\u2014Provide custom hover text to describe to end users what the share button does.", "Inline\u2014Display the sharing options as inline tiles.", "\nFeedback on this topic?\n"]}, {"name": "suitability-modeler-widget", "data": ["The Suitability Modeler widget combines and weights different layers so users can evaluate multiple factors at once. For example, suitability models help answer questions such as Where are the greatest risks for insect damage? or Where are optimal locations for a commercial development? The answers to these types of questions depend on the input data and the criteria defined from that data.", " The Suitability Modeler widget uses fast, web-based weighted raster overlay to generate models from a service. Users can start from a blank state of a weighted raster overlay (WRO) service or a preconfigured WRO model. Once they choose layers, assign weights, and adjust layer classification values to define the analysis, they can run the model, visualize results, and optionally save the result as an item in their organization.", "The Suitability Modeler widget, like the modeler in ArcGIS GeoPlanner, leverages a special type of image layer known as a weighted overlay service. There are several weighted overlay services provided by Esri and available publicly in ArcGIS Online,  including ecological and physiographic datasets that have global extents. The suitability models created by the Suitability Modeler widget can be exported as hosted image service layers, which are referred to as weighted overlay model services.", "Use this widget to support app design requirements such as the following:", "This widget requires connecting to a Map widget. You can connect multiple Suitability Modeler widgets to the same Map widget.", "When you include this widget in an app, it provides users with the following panels:", "The Suitability Modeler widget includes the following settings:", "Change the default widget name in its settings panel or in the Page panel's Outline view.", " Currently, the Export button only appears in the widget if a user is signed in when they open the app.", "Use one of the example modeling services listed in the setting panel by copying and pasting it in the Image service URL box.", "Typing a model name  in the Model box displays a list of suggestions based on  models that are available to you.", "Weighted overlay has three conceptual steps. First, each raster layer is assigned a weight, as a percentage, in the analysis. This allows the user to emphasize the relative importance of each layer in the analysis. Second, values within each raster layer are mapped to a common suitability scale. This allows the user to compare the different types of information in each raster layer. Third, all raster layers in the analysis are overlaid. Each raster cell\u2019s suitability value is multiplied by its layer weight and totaled with the values of other raster cells it overlays. The result is a suitability value that is used for symbology in the output raster layer.", "In the illustration, the two input rasters have been reclassified to a suitability scale of 1 to 3. Each raster is weighted with a percent influence. The cell values are multiplied by their weight, and the results are added together to create the output raster. For example, in the upper left cell, the values for the two inputs become (2 * 0.75) = 1.5 and (3 * 0.25) = 0.75. The sum of 1.5 and 0.75 is 2.25. The final value is rounded to 2 because the output is an integer raster layer.", "Weighted overlay models provide a powerful way to visualize and analyze site suitability factors. The results of a model can be used to identify areas of opportunity and risk. Models can be further leveraged with scenario planning in GeoPlanner.", "For more information about publishing data for weighted overlay, see the ArcGIS GeoPlanner documentation.", "\nFeedback on this topic?\n"]}, {"name": "survey-widget", "data": ["The Survey widget integrates with ArcGIS Survey123 and allows you to create a survey or use an existing survey in the widget. Use the Survey widget to collect feedback or general data from end users. When you include a survey in your app, you can collect data from users by asking questions. Depending on the question type, the answer to each question is stored as an attribute, geometry, or attachment for a feature in the underlying feature layer. If you connect the Survey widget to a map that contains a layer or layer view of the survey data, users can click a feature on the map to edit or view the data via the survey.", "Use this widget to support app design requirements such as the following:", "When you add a Survey widget to the page, you can create a survey using the integrated survey designer or by connecting to one of your existing surveys. Once you create a survey or select an existing survey, additional widget configuration settings allow you to change its appearance and send data from the app to the survey. For example, you can send data from a map in your app to the survey by connecting feature attributes or geometry in the feature layer to questions in the survey. All data collected by the survey in your app is stored in the survey\u2019s underlying feature layer.", "The survey content adjusts to fit the width of the widget, which you can resize on the canvas. You can configure the widget to ignore a survey\u2019s theme if it doesn\u2019t fit your app design.", "The Survey widget includes the following settings:", "Edit and view modes only support  surveys created with Survey123 version 3.9  and later.", "\nFeedback on this topic?\n"]}, {"name": "table-widget", "data": ["The Table widget displays interactive attribute tables for feature layers and scene layers with an associated feature layer with the option to include multiple\r\nsheets that end users access via tabs or a list. You can choose which fields to include in the table and turn on tools such as search and selection.", "Use this widget to support app design requirements such as the following:", "This widget requires that a data source be set for each sheet in the table. Table supports feature layers and scene layers with an associated feature layer. You can set actions for a Table widget to interact with other widgets, such as zooming to the selected feature on a map in a Map widget or filtering rows in  a List widget. You can also use this widget to display feature attributes without including a map in the app.", "The Table widget includes the following settings:", "\nFeedback on this topic?\n"]}, {"name": "text-widget", "data": ["The Text widget allows you to add static or dynamic text to your app.", "Use this widget to support app design requirements such as the following:", "The Text widget includes a rich text editor in which you can change the font type, size, color, and so on. For dynamic text, you can set the data source to use attributes or get statistics from multiple feature layers. Common text formatting options are available on a toolbar that appears when you're editing in the Text widget. You can access all the formatting options in the widget\u2019s configuration panel. To edit hyperlinked text, click the linked text, click the Link button on the Content tab, edit the configured link, and close the Set link panel.", " When typing in the text editor, use keyboard shortcuts to undo or redo text edits (Ctrl+Z for undo and Ctrl+Y for redo). The Undo and Redo buttons on the builder toolbar are based on the actions performed in the builder, such as connecting data or adding the Text widget.", "When the text takes up more space than the size of the widget, end users can scroll through the text within the widget. To indicate when there is more text than is showing, a fade effect appears at the bottom of the widget with a jumping arrow icon in the corner.", "The Text widget includes the following settings:", "When a variable phrase from dynamic content is included in the selected text, this button removes its content because it\u2019s treated as text formatting.", "When you connect the Text widget to data, the Dynamic content  button becomes active on the toolbar that appears for the widget\u2019s inline-editing mode. This button opens a panel with the following options to get dynamic content from the selected data source.", "For more information about using dynamic content, see the data topic.", "\nFeedback on this topic?\n"]}, {"name": "widget-controller-widget", "data": ["The Widget Controller widget is a container you can use to organize other widgets as buttons, managing their life cycle and display. You can change the direction of the widgets in the controller, either horizontal or vertical. You can also control the number of widgets that can be opened and how the widget buttons display.", "Use this widget to support app design requirements such as the following:", " To add widgets to the controller, click the Add widget button and select from a widget gallery or drag a widget from the Insert widget panel onto the controller. Configure the added widgets by clicking the widget on the controller to open its settings panel. Drag the bottom corner of the widget panel to define its initial size. ", "The Widget Controller widget includes the following settings:", "Your selected theme affects the default colors in the configuration panels. You can choose a custom color if you want to use a color that\u2019s not part of the app\u2019s theme.", "\nFeedback on this topic?\n"]}]